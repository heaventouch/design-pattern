  使用代理模式创建代表对象，让代表对象控制某对象的访问，被代理的对象可以是远程的对象、创建开销大的对象或需要安全控制的对象。

代理模式：
  为另一个对象提供一个替身或占位符以控制对这个对象的访问。
  
远程代理：
  远程代理可以作为另一个JVM上对象的本地代表。

虚拟代理：
  虚拟代理作为创建开销大的对象的代表。
  
防火墙代理：
  控制网络资源的访问，保护主题免于“坏客户”的侵害。

智能引用代理：
  当主题被引用时，进行额外的动作，例如计算一个对象被引用的次数。

缓存代理：
  为开销大的运算结果提供暂时存储：它允许多个客户共享结果，以减少计算或网络延迟。

同步代理：
  在多线程的情况下为主题提供安全的访问。


复杂隐藏代理：
  用来隐藏一个类的复杂集合的复杂度，并进行控制访问。有时候也称外观代理，这并不难理解。复杂隐藏代理和外观模式是不一样的，因为代理控制访问，而外观模式只是提供另一组接口。
  
写入时复制代理：
  用来控制对象的复制，方法是延迟对象的复制，知道客户真的需要位置。这是虚拟代理的变体。

  
